Tools in Data Science
Tools in Data Science
1. Development Tools
2. Deployment Tools
3. Large Language Models
Project 1
4. Data Sourcing
5. Data Preparation
6. Data Analysis
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
Interactive Notebooks: Marimo

Marimo is a new take on notebooks that solves some headaches of Jupyter. It runs cells reactively - when you change one cell, all dependent cells update automatically, just like a spreadsheet.

Marimoâ€™s cells canâ€™t be run out of order. This makes Marimo more reproducible and easier to debug, but requires a mental shift from the Jupyter/Colab way of working.

It also runs Python directly in the browser and is quite interactive. Browse the gallery of examples. With a wide variety of interactive widgets, Itâ€™s growing popular as an alternative to Streamlit for building data science web apps.

Common Operations:

# Create new notebook
uvx marimo new

# Run notebook server
uvx marimo edit notebook.py

# Export to HTML
uvx marimo export notebook.py
Copy to clipboard
Error
Copied

Best Practices:

Cell Dependencies

Keep cells focused and atomic
Use clear variable names
Document data flow between cells

Interactive Elements

# Add interactive widgets
slider = mo.ui.slider(1, 100)
# Create dynamic Markdown
mo.md(f"{slider} {"ðŸŸ¢" * slider.value}")
Copy to clipboard
Error
Copied

Version Control

Keep notebooks are Python files
Use Git to track changes
Publish on marimo.app for collaboration

 Previous
Narratives with LLMs
Next 
HTML Slides: RevealJS